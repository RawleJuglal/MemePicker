(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))t(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const s of n.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&t(s)}).observe(document,{childList:!0,subtree:!0});function a(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerpolicy&&(n.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?n.credentials="include":i.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function t(i){if(i.ep)return;i.ep=!0;const n=a(i);fetch(i.href,n)}})();const g=[{emotionTags:["moody"],isGif:!1,image:"angry.jpeg",alt:"A cat looking moody"},{emotionTags:["moody","insomniac"],isGif:!1,image:"angry2.jpeg",alt:"A cat looking moody"},{emotionTags:["moody"],isGif:!1,image:"angry3.jpeg",alt:"A cat looking moody"},{emotionTags:["confused","sad"],isGif:!1,image:"confused.jpeg",alt:"A cat looking confused"},{emotionTags:["dominant","moody"],isGif:!1,image:"dominant.jpeg",alt:"A cat looking dominant"},{emotionTags:["happy","relaxed"],isGif:!1,image:"happy.jpeg",alt:"A cat looking happy"},{emotionTags:["hungry"],isGif:!1,image:"hungry.jpeg",alt:"A cat looking hungry"},{emotionTags:["hungry"],isGif:!1,image:"hungry1.jpeg",alt:"A cat looking hungry"},{emotionTags:["insomniac"],isGif:!1,image:"insomnia.jpeg",alt:"A cat looking insomniac"},{emotionTags:["insomniac"],isGif:!1,image:"insomnia1.jpeg",alt:"A cat looking insomniac"},{emotionTags:["relaxed"],isGif:!1,image:"lazy.jpeg",alt:"A cat looking lazy"},{emotionTags:["scared"],isGif:!1,image:"nervous.jpeg",alt:"A cat looking nervous"},{emotionTags:["sad"],isGif:!1,image:"sad.jpeg",alt:"A cat looking sad"},{emotionTags:["sad","moody"],isGif:!1,image:"sad1.jpeg",alt:"A cat looking sad"},{emotionTags:["moody"],isGif:!0,image:"angry.gif",alt:"A cat looking moody"},{emotionTags:["moody"],isGif:!0,image:"angry2.gif",alt:"A cat looking angry"},{emotionTags:["confused"],isGif:!0,image:"confused2.gif",alt:"A cat looking confused"},{emotionTags:["dominant"],isGif:!0,image:"dominant.gif",alt:"A cat looking dominant"},{emotionTags:["happy"],isGif:!0,image:"happy.gif",alt:"A cat looking happy"},{emotionTags:["hungry","sad","confused"],isGif:!0,image:"confused.gif",alt:"A cat looking hungry"},{emotionTags:["hungry"],isGif:!0,image:"hungry.gif",alt:"A cat looking hungry"},{emotionTags:["hungry"],isGif:!0,image:"hungry2.gif",alt:"A cat looking hungry"},{emotionTags:["insomniac","scared"],isGif:!0,image:"insomnia2.gif",alt:"A cat looking insomniac"},{emotionTags:["relaxed"],isGif:!0,image:"lazy.gif",alt:"A cat looking relaxed"},{emotionTags:["relaxed"],isGif:!0,image:"relaxed2.gif",alt:"A cat looking relaxed"},{emotionTags:["scared","sad"],isGif:!0,image:"nervous.gif",alt:"A cat looking nervous"},{emotionTags:["scared"],isGif:!0,image:"nervous2.gif",alt:"A cat looking scared"},{emotionTags:["sad"],isGif:!0,image:"sad.gif",alt:"A cat looking sad"}],l=document.getElementById("emotion-radios"),m=document.getElementById("get-image-btn"),c=document.getElementById("gifs-only-option"),d=document.getElementById("meme-modal-inner"),r=document.getElementById("meme-modal"),f=document.getElementById("meme-modal-close-btn");l.addEventListener("change",u);f.addEventListener("click",y);m.addEventListener("click",p);function u(e){const o=document.getElementsByClassName("radio");for(let a of o)a.classList.remove("highlight");document.getElementById(e.target.id).parentElement.classList.add("highlight")}function y(){r.style.display="none"}function p(){const e=h();d.innerHTML=`
        <img 
        class="cat-img" 
        src="./images/${e.image}"
        alt="${e.alt}"
        >
        `,r.style.display="flex"}function h(){const e=A();if(e.length===1)return e[0];{const o=Math.floor(Math.random()*e.length);return e[o]}}function A(){if(document.querySelector('input[type="radio"]:checked')){const e=document.querySelector('input[type="radio"]:checked').value,o=c.checked;return g.filter(function(t){return o?t.emotionTags.includes(e)&&t.isGif:t.emotionTags.includes(e)})}}function k(e){const o=[];for(let a of e)for(let t of a.emotionTags)o.includes(t)||o.push(t);return o}function T(e){let o="";const a=k(e);for(let t of a)o+=`
        <div class="radio">
            <label for="${t}">${t}</label>
            <input
            type="radio"
            id="${t}"
            value="${t}"
            name="emotions"
            >
        </div>`;l.innerHTML=o}T(g);
